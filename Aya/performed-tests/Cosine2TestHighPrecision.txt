Total input transformers used: 28
Total output transformers used: 28
Input transformer chain length: 1
Output transformer chain length: 3
1 Inputs Used For Validation: 
43.2611920199576 49.5577398379767 82.5486015159872 45.7046058503301 85.4645065787548 87.1218797529213 36.9896907021054 41.4771397539735 61.6504575703759 73.1069937695625 
Total MR count: 30720
MR success rates:
Success rate: 0.8: 320 instances.
Success rate: 1: 30400 instances.
Add( input[0], -1, )  === Add( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -2, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -2, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], 1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], 1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Div( initialState[1], -1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Div( initialState[1], -1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Div( initialState[1], 1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Div( initialState[1], 1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Mul( initialState[1], -1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Mul( initialState[1], -1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Mul( initialState[1], 1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Mul( initialState[1], 1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], -1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], -1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 2, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 2, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Div( initialState[1], -1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Div( initialState[1], -1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Div( initialState[1], 1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Div( initialState[1], 1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Mul( initialState[1], -1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Mul( initialState[1], -1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Mul( initialState[1], 1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Mul( initialState[1], 1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], -1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], -1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 2, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 2, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Div( initialState[1], -1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Div( initialState[1], -1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Div( initialState[1], 1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Div( initialState[1], 1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Mul( initialState[1], -1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Mul( initialState[1], -1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Mul( initialState[1], 1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Mul( initialState[1], 1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -2, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -2, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], 1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], 1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Div( initialState[1], -1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Div( initialState[1], -1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Div( initialState[1], 1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Div( initialState[1], 1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Mul( initialState[1], -1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Mul( initialState[1], -1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Mul( initialState[1], 1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Mul( initialState[1], 1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Div( initialState[1], -1, ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Div( initialState[1], 1, ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Mul( initialState[1], -1, ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Mul( initialState[1], 1, ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Cos( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Cos( input[0] )  === Cos( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Cos( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Cos( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Cos( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Cos( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Cos( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === CosSquared( initialState[1] ) Root( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Cos( input[0] )  === Div( initialState[1], -1, ) Cos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Div( initialState[1], 1, ) Cos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Mul( initialState[1], -1, ) Cos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Mul( initialState[1], 1, ) Cos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === Div( initialState[1], -1, ) CosDivBySin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === Div( initialState[1], 1, ) CosDivBySin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === Mul( initialState[1], -1, ) CosDivBySin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === Mul( initialState[1], 1, ) CosDivBySin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === Cos( initialState[1] ) Square( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === SinSquared( initialState[1] ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === SinSquared( initialState[1] ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === Add( initialState[1], -1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Add( initialState[1], -1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Add( initialState[1], -2, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Add( initialState[1], -2, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Add( initialState[1], 1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Add( initialState[1], 1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Add( initialState[1], 2, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Add( initialState[1], 2, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Add( initialState[1], input[0], ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Add( initialState[1], input[0], ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Atan( initialState[1] ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Atan( initialState[1] ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Cos( initialState[1] ) Acos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Cos( initialState[1] ) Asin( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Cos( initialState[1] ) Div( initialState[1], -1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === Cos( initialState[1] ) Div( initialState[1], 1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === Cos( initialState[1] ) Mul( initialState[1], -1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === Cos( initialState[1] ) Mul( initialState[1], 1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === Cos( initialState[1] ) Square( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === Cos( initialState[1] ) Square( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === CosDivBySin( initialState[1] ) Atan( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Acos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], 1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], 1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], 2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], 2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Asin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Atan( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Atan( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Cos( initialState[1] ) Acos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.8 [Total occurred: 80; Avg. success rate: 0.8]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], -2, ) Mul( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], 2, ) Mul( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Root( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Sin( initialState[1] ) Asin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) SinDivByCos( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Square( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Tan( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -2, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -2, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 2, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 2, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -2, ) Add( initialState[1], input[0], ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -2, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -2, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 2, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 2, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Root( initialState[1] ) Square( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Acos( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Asin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === SinDivByCos( initialState[1] ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Add( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Add( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Div( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Div( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Mul( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Mul( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Sub( initialState[1], 1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Sub( initialState[1], 1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Square( initialState[1] ) Root( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Sub( initialState[1], -1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sub( initialState[1], -1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sub( initialState[1], -2, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sub( initialState[1], -2, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sub( initialState[1], 1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sub( initialState[1], 1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sub( initialState[1], 2, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sub( initialState[1], 2, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Tan( initialState[1] ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -2, )  === Cos( initialState[1] ) Add( initialState[1], 1, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Cos( initialState[1] ) Sub( initialState[1], -1, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -1, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -1, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) Add( initialState[1], input[0], ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 1, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 1, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Mul( initialState[1], -1, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Mul( initialState[1], -1, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Mul( initialState[1], 1, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Mul( initialState[1], 1, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], -1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], -1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], -2, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], -2, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], 1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], 1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], 2, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], 2, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], input[0], ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], input[0], ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Atan( initialState[1] ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Atan( initialState[1] ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Cos( initialState[1] ) Acos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Cos( initialState[1] ) Asin( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Cos( initialState[1] ) Div( initialState[1], -1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Cos( initialState[1] ) Div( initialState[1], 1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Cos( initialState[1] ) Mul( initialState[1], -1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Cos( initialState[1] ) Mul( initialState[1], 1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Cos( initialState[1] ) Square( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Cos( initialState[1] ) Square( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === CosDivBySin( initialState[1] ) Atan( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Acos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], 1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], 1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], 2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], 2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Asin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Atan( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Atan( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Cos( initialState[1] ) Acos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.8 [Total occurred: 80; Avg. success rate: 0.8]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], -2, ) Mul( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], 2, ) Mul( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Root( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Sin( initialState[1] ) Asin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) SinDivByCos( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Square( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Tan( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -2, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -2, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 2, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 2, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -2, ) Add( initialState[1], input[0], ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -2, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -2, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 2, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 2, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Root( initialState[1] ) Square( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Acos( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Asin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === SinDivByCos( initialState[1] ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Add( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Add( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Div( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Div( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Mul( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Mul( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Sub( initialState[1], 1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Sub( initialState[1], 1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Square( initialState[1] ) Root( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], -1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], -1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], -2, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], -2, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], 1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], 1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], 2, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], 2, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Tan( initialState[1] ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 2, )  === Cos( initialState[1] ) Add( initialState[1], 1, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Cos( initialState[1] ) Sub( initialState[1], -1, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -1, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -1, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) Add( initialState[1], input[0], ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 1, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 1, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Mul( initialState[1], -1, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Mul( initialState[1], -1, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Mul( initialState[1], 1, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Mul( initialState[1], 1, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Add( initialState[1], -1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Add( initialState[1], -1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Add( initialState[1], -2, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Add( initialState[1], -2, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Add( initialState[1], 1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Add( initialState[1], 1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Add( initialState[1], 2, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Add( initialState[1], 2, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Add( initialState[1], input[0], ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Add( initialState[1], input[0], ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Atan( initialState[1] ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Atan( initialState[1] ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Cos( initialState[1] ) Acos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Cos( initialState[1] ) Asin( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Cos( initialState[1] ) Div( initialState[1], -1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === Cos( initialState[1] ) Div( initialState[1], 1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === Cos( initialState[1] ) Mul( initialState[1], -1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === Cos( initialState[1] ) Mul( initialState[1], 1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === Cos( initialState[1] ) Square( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === Cos( initialState[1] ) Square( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === CosDivBySin( initialState[1] ) Atan( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Acos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], 1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], 1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], 2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], 2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Asin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Atan( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Atan( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Cos( initialState[1] ) Acos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.8 [Total occurred: 80; Avg. success rate: 0.8]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], -2, ) Mul( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], 2, ) Mul( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Root( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Sin( initialState[1] ) Asin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) SinDivByCos( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Square( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Tan( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -2, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -2, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 2, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 2, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -2, ) Add( initialState[1], input[0], ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -2, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -2, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 2, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 2, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Root( initialState[1] ) Square( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Acos( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Asin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === SinDivByCos( initialState[1] ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Add( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Add( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Div( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Div( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Mul( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Mul( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Sub( initialState[1], 1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Sub( initialState[1], 1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Square( initialState[1] ) Root( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Sub( initialState[1], -1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sub( initialState[1], -1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sub( initialState[1], -2, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sub( initialState[1], -2, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sub( initialState[1], 1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sub( initialState[1], 1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sub( initialState[1], 2, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sub( initialState[1], 2, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Tan( initialState[1] ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Add( initialState[1], input[0], ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 160; Avg. success rate: 1]
Mul( input[0], -2, )  === Add( initialState[1], input[0], ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Add( initialState[1], input[0], ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Add( initialState[1], input[0], ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Add( initialState[1], input[0], ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Add( initialState[1], input[0], ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Add( initialState[1], input[0], ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Div( initialState[1], -1, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Div( initialState[1], -1, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Div( initialState[1], 1, ) Add( initialState[1], input[0], ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Div( initialState[1], 1, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Div( initialState[1], 1, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -1, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -1, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 1, ) Add( initialState[1], input[0], ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 1, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 1, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], -1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], -1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], -2, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], -2, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], 1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], 1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], 2, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], 2, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], input[0], ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], input[0], ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Atan( initialState[1] ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Atan( initialState[1] ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Cos( initialState[1] ) Acos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Cos( initialState[1] ) Asin( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Cos( initialState[1] ) Div( initialState[1], -1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Cos( initialState[1] ) Div( initialState[1], 1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Cos( initialState[1] ) Mul( initialState[1], -1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Cos( initialState[1] ) Mul( initialState[1], 1, ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Cos( initialState[1] ) Square( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Cos( initialState[1] ) Square( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === CosDivBySin( initialState[1] ) Atan( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Acos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], 1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], 1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], 2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], 2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Asin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Atan( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Atan( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Cos( initialState[1] ) Acos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.8 [Total occurred: 80; Avg. success rate: 0.8]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], -2, ) Mul( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], 2, ) Mul( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], -2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Mul( initialState[1], 2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Root( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Sin( initialState[1] ) Asin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) SinDivByCos( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Square( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], -2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Tan( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -2, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -2, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 2, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 2, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -2, ) Add( initialState[1], input[0], ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -2, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -2, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 2, ) Div( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 2, ) Div( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Root( initialState[1] ) Square( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Acos( initialState[1] ) SinSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Asin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === SinDivByCos( initialState[1] ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Add( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Add( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Div( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Div( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Mul( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Mul( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Sub( initialState[1], 1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Sub( initialState[1], 1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Square( initialState[1] ) Root( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], -1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], -1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], -2, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], -2, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], 1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], 1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], 2, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], 2, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Tan( initialState[1] ) Atan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 160; Avg. success rate: 1]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Div( initialState[1], -1, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Div( initialState[1], -1, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Div( initialState[1], 1, ) Add( initialState[1], input[0], ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Div( initialState[1], 1, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Div( initialState[1], 1, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -1, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -1, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 1, ) Add( initialState[1], input[0], ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 1, ) Mul( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 1, ) Mul( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Root( input[0] )  === Div( initialState[1], 1, ) Root( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Mul( initialState[1], 1, ) Root( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Div( initialState[1], -1, ) Sin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Div( initialState[1], 1, ) Sin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Mul( initialState[1], -1, ) Sin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === SinSquared( initialState[1] ) Root( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
SinDivByCos( input[0] )  === Div( initialState[1], -1, ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Div( initialState[1], -1, ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Div( initialState[1], 1, ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Div( initialState[1], 1, ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Mul( initialState[1], -1, ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Mul( initialState[1], -1, ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Mul( initialState[1], 1, ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Mul( initialState[1], 1, ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === CosSquared( initialState[1] ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === CosSquared( initialState[1] ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === Div( initialState[1], -1, ) SinSquared( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === Div( initialState[1], 1, ) SinSquared( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === Mul( initialState[1], -1, ) SinSquared( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === Mul( initialState[1], 1, ) SinSquared( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === Sin( initialState[1] ) Square( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Div( initialState[1], -1, ) Square( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Div( initialState[1], 1, ) Square( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Mul( initialState[1], -1, ) Square( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Mul( initialState[1], 1, ) Square( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], -1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], -1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 2, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 2, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Div( initialState[1], -1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Div( initialState[1], -1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Div( initialState[1], 1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Div( initialState[1], 1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Mul( initialState[1], -1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Mul( initialState[1], -1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Mul( initialState[1], 1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Mul( initialState[1], 1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -2, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -2, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], 1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], 1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Div( initialState[1], -1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Div( initialState[1], -1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Div( initialState[1], 1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Div( initialState[1], 1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Mul( initialState[1], -1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Mul( initialState[1], -1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Mul( initialState[1], 1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Mul( initialState[1], 1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -2, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -2, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], 1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], 1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Div( initialState[1], -1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Div( initialState[1], -1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Div( initialState[1], 1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Div( initialState[1], 1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Mul( initialState[1], -1, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Mul( initialState[1], -1, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Mul( initialState[1], 1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Mul( initialState[1], 1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], -1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], -1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 2, ) Add( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 2, ) Sub( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Div( initialState[1], -1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Div( initialState[1], -1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Div( initialState[1], 1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Div( initialState[1], 1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Mul( initialState[1], -1, ) Add( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Mul( initialState[1], -1, ) Sub( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Mul( initialState[1], 1, ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Mul( initialState[1], 1, ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 1, ) Add( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 1, ) Sub( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Tan( input[0] )  === Div( initialState[1], -1, ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Div( initialState[1], -1, ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Div( initialState[1], 1, ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Div( initialState[1], 1, ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Mul( initialState[1], -1, ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Mul( initialState[1], -1, ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Mul( initialState[1], 1, ) SinDivByCos( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Mul( initialState[1], 1, ) Tan( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Tan( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Tan( input[0] )  === Tan( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Tan( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Tan( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Tan( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Tan( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Tan( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]

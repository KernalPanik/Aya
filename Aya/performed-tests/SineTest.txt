Total input transformers used: 28
Total output transformers used: 28
Input transformer chain length: 1
Output transformer chain length: 3
1 Inputs Used For Validation: 
36.5615709598736 66.3039211750288 84.402014392071 32.842025656146 37.5858340194039 90.8080441095795 82.4147663342454 80.9038330881907 48.534287900761 88.9665038233375 
Total MR count: 21800
MR success rates:
Success rate: 0: 304 instances.
Success rate: 0.1: 248 instances.
Success rate: 0.2: 432 instances.
Success rate: 0.3: 128 instances.
Success rate: 0.4: 400 instances.
Success rate: 0.6: 432 instances.
Success rate: 0.7: 576 instances.
Success rate: 0.9: 1120 instances.
Success rate: 1: 18160 instances.
Add( input[0], -1, )  === Add( initialState[1], -1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -2, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], -2, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], 1, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Add( initialState[1], 1, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Div( initialState[1], 1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Div( initialState[1], 1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Mul( initialState[1], 1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Mul( initialState[1], 1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], -1, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], -1, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 2, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -1, )  === Sub( initialState[1], 2, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Add( initialState[1], -2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], -2, )  === Div( initialState[1], 1, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Div( initialState[1], 1, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Mul( initialState[1], 1, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Mul( initialState[1], 1, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], -2, )  === Sub( initialState[1], 2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], -1, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], -1, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 2, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], 2, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Add( initialState[1], input[0], ) Atan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 16; Avg. success rate: 0]
Add( input[0], 1, )  === Div( initialState[1], 1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Div( initialState[1], 1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Mul( initialState[1], 1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Mul( initialState[1], 1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Mul( initialState[1], 2, ) Atan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Add( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], input[0], ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 16; Avg. success rate: 0.2]
Add( input[0], 1, )  === SinSquared( initialState[1] ) Add( initialState[1], input[0], ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 16; Avg. success rate: 0.2]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -2, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], -2, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], 1, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 1, )  === Sub( initialState[1], 1, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Add( initialState[1], 2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Add( input[0], 2, )  === Div( initialState[1], 1, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Div( initialState[1], 1, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Mul( initialState[1], 1, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Mul( initialState[1], 1, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Add( input[0], 2, )  === Sub( initialState[1], -2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Add( initialState[1], -1, ) Sin( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === Add( initialState[1], -2, ) SinSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === Add( initialState[1], 1, ) CosDivBySin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === Add( initialState[1], 2, ) SinSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Atan( input[0] )  === Atan( initialState[1] ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === Atan( initialState[1] ) Atan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 8; Avg. success rate: 0.1]
Atan( input[0] )  === Atan( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) Sin( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === Atan( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) SinSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === Atan( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Atan( input[0] )  === Atan( initialState[1] ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === Cos( initialState[1] ) Cos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === Cos( initialState[1] ) CosSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === CosDivBySin( initialState[1] ) Cos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === CosDivBySin( initialState[1] ) Cos( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === CosDivBySin( initialState[1] ) CosSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === CosDivBySin( initialState[1] ) CosSquared( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === CosDivBySin( initialState[1] ) CosSquared( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === CosDivBySin( initialState[1] ) Div( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === CosDivBySin( initialState[1] ) Div( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === CosDivBySin( initialState[1] ) Mul( initialState[1], -1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === CosDivBySin( initialState[1] ) Mul( initialState[1], 1, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === CosSquared( initialState[1] ) Cos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === CosSquared( initialState[1] ) CosSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === Div( initialState[1], -1, ) CosDivBySin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === Div( initialState[1], 1, ) Atan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Div( initialState[1], 1, ) CosDivBySin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === Mul( initialState[1], -1, ) CosDivBySin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === Mul( initialState[1], 1, ) Atan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Atan( input[0] )  === Mul( initialState[1], 1, ) CosDivBySin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === Sin( initialState[1] ) Cos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === Sin( initialState[1] ) CosSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === SinDivByCos( initialState[1] ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === SinDivByCos( initialState[1] ) Cos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === SinDivByCos( initialState[1] ) CosSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === SinDivByCos( initialState[1] ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === SinSquared( initialState[1] ) Cos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === SinSquared( initialState[1] ) CosSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === Sub( initialState[1], -1, ) CosDivBySin( initialState[1] ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === Sub( initialState[1], -2, ) SinSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Atan( input[0] )  === Sub( initialState[1], 1, ) Sin( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === Sub( initialState[1], 2, ) SinSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === Tan( initialState[1] ) Add( initialState[1], -2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Atan( input[0] )  === Tan( initialState[1] ) Cos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === Tan( initialState[1] ) CosSquared( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Atan( input[0] )  === Tan( initialState[1] ) Sub( initialState[1], 2, ) CosSquared( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Cos( input[0] )  === Cos( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Cos( initialState[1] ) Div( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Cos( initialState[1] ) Div( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Cos( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Cos( initialState[1] ) Mul( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Cos( initialState[1] ) Mul( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Cos( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Cos( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Cos( initialState[1] ) SinDivByCos( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Cos( initialState[1] ) SinDivByCos( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Cos( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 80; Avg. success rate: 0.9]
Cos( input[0] )  === Cos( initialState[1] ) Tan( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Cos( initialState[1] ) Tan( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === CosDivBySin( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosDivBySin( initialState[1] ) Div( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosDivBySin( initialState[1] ) Div( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosDivBySin( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosDivBySin( initialState[1] ) Mul( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosDivBySin( initialState[1] ) Mul( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosDivBySin( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosDivBySin( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosDivBySin( initialState[1] ) SinDivByCos( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosDivBySin( initialState[1] ) SinDivByCos( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosDivBySin( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 8; Avg. success rate: 0.1]
Cos( input[0] )  === CosDivBySin( initialState[1] ) Tan( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosDivBySin( initialState[1] ) Tan( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === CosSquared( initialState[1] ) Root( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 80; Avg. success rate: 0.9]
Cos( input[0] )  === CosSquared( initialState[1] ) Root( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 72; Avg. success rate: 0.6]
Cos( input[0] )  === CosSquared( initialState[1] ) Root( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 72; Avg. success rate: 0.6]
Cos( input[0] )  === Div( initialState[1], -1, ) Cos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Div( initialState[1], -1, ) Cos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Div( initialState[1], -1, ) Cos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Div( initialState[1], 1, ) Cos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Div( initialState[1], 1, ) Cos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Div( initialState[1], 1, ) Cos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Div( initialState[1], 1, ) CosDivBySin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === Div( initialState[1], 1, ) CosDivBySin( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === Div( initialState[1], 1, ) CosDivBySin( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === Mul( initialState[1], -1, ) Cos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Mul( initialState[1], -1, ) Cos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Mul( initialState[1], -1, ) Cos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Mul( initialState[1], 1, ) Cos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Cos( input[0] )  === Mul( initialState[1], 1, ) Cos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Mul( initialState[1], 1, ) Cos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.7 [Total occurred: 36; Avg. success rate: 0.7]
Cos( input[0] )  === Mul( initialState[1], 1, ) CosDivBySin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === Mul( initialState[1], 1, ) CosDivBySin( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
Cos( input[0] )  === Mul( initialState[1], 1, ) CosDivBySin( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) Div( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) Div( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) Mul( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) Mul( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) SinDivByCos( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) SinDivByCos( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 8; Avg. success rate: 0.1]
CosDivBySin( input[0] )  === Cos( initialState[1] ) Tan( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Cos( initialState[1] ) Tan( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Div( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Div( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Mul( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Mul( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) SinDivByCos( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) SinDivByCos( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 80; Avg. success rate: 0.9]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Tan( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosDivBySin( input[0] )  === CosDivBySin( initialState[1] ) Tan( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosDivBySin( input[0] )  === CosSquared( initialState[1] ) Root( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 8; Avg. success rate: 0.1]
CosDivBySin( input[0] )  === CosSquared( initialState[1] ) Root( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 8; Avg. success rate: 0.1]
CosDivBySin( input[0] )  === CosSquared( initialState[1] ) Root( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 8; Avg. success rate: 0.1]
CosDivBySin( input[0] )  === Div( initialState[1], -1, ) Cos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Div( initialState[1], -1, ) Cos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Div( initialState[1], -1, ) Cos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Div( initialState[1], 1, ) Cos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Div( initialState[1], 1, ) Cos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Div( initialState[1], 1, ) Cos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Div( initialState[1], 1, ) CosDivBySin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === Div( initialState[1], 1, ) CosDivBySin( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosDivBySin( input[0] )  === Div( initialState[1], 1, ) CosDivBySin( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosDivBySin( input[0] )  === Mul( initialState[1], -1, ) Cos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Mul( initialState[1], -1, ) Cos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Mul( initialState[1], -1, ) Cos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Mul( initialState[1], 1, ) Cos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Mul( initialState[1], 1, ) Cos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Mul( initialState[1], 1, ) Cos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 4; Avg. success rate: 0.2]
CosDivBySin( input[0] )  === Mul( initialState[1], 1, ) CosDivBySin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosDivBySin( input[0] )  === Mul( initialState[1], 1, ) CosDivBySin( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosDivBySin( input[0] )  === Mul( initialState[1], 1, ) CosDivBySin( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.6 [Total occurred: 24; Avg. success rate: 0.6]
CosSquared( input[0] )  === Cos( initialState[1] ) SinSquared( initialState[1] ) Asin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
CosSquared( input[0] )  === Cos( initialState[1] ) SinSquared( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
CosSquared( input[0] )  === Cos( initialState[1] ) Square( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
CosSquared( input[0] )  === Cos( initialState[1] ) Square( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 72; Avg. success rate: 1]
CosSquared( input[0] )  === Cos( initialState[1] ) Square( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 72; Avg. success rate: 1]
CosSquared( input[0] )  === CosDivBySin( initialState[1] ) SinSquared( initialState[1] ) Asin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 8; Avg. success rate: 0.2]
CosSquared( input[0] )  === CosDivBySin( initialState[1] ) SinSquared( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 8; Avg. success rate: 0.2]
CosSquared( input[0] )  === CosDivBySin( initialState[1] ) Square( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 8; Avg. success rate: 0.2]
CosSquared( input[0] )  === CosDivBySin( initialState[1] ) Square( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 8; Avg. success rate: 0.2]
CosSquared( input[0] )  === CosDivBySin( initialState[1] ) Square( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 8; Avg. success rate: 0.2]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Div( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Mul( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) SinDivByCos( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) SinDivByCos( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Tan( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === CosSquared( initialState[1] ) Tan( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === Div( initialState[1], -1, ) CosSquared( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === Div( initialState[1], 1, ) CosSquared( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === Mul( initialState[1], -1, ) CosSquared( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
CosSquared( input[0] )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
CosSquared( input[0] )  === Mul( initialState[1], 1, ) CosSquared( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 36; Avg. success rate: 1]
Div( input[0], -1, )  === Add( initialState[1], input[0], ) Div( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], 2, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], 2, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], -1, )  === Div( initialState[1], -1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], -2, ) Mul( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 1, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 1, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Div( initialState[1], 2, ) Mul( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -2, ) Add( initialState[1], input[0], ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], -2, ) Div( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 1, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Mul( initialState[1], 2, ) Div( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], -1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], -1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], -2, ) Mul( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], 1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], 1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], 2, ) Mul( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], -1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], -1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], -2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], 2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Add( initialState[1], 1, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Root( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Root( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], -1, )  === SinSquared( initialState[1] ) Sub( initialState[1], -1, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], -2, )  === Div( initialState[1], -1, ) Div( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], -2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 1, ) Div( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 2, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 2, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 2, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Div( initialState[1], 2, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Mul( initialState[1], -1, ) Div( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], -2, )  === Mul( initialState[1], 1, ) Div( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], -1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], -1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], -2, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], -2, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], 1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], 1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], 2, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], 2, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Add( initialState[1], input[0], ) Div( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Atan( initialState[1] ) SinDivByCos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Atan( initialState[1] ) Tan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Cos( initialState[1] ) Acos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Cos( initialState[1] ) Asin( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Cos( initialState[1] ) Atan( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 8; Avg. success rate: 0.2]
Div( input[0], 1, )  === CosDivBySin( initialState[1] ) Acos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 8; Avg. success rate: 0.2]
Div( input[0], 1, )  === CosDivBySin( initialState[1] ) Asin( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 8; Avg. success rate: 0.2]
Div( input[0], 1, )  === CosDivBySin( initialState[1] ) Atan( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], input[0], ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 16; Avg. success rate: 0.2]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], -2, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], -2, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], 1, )  === Div( initialState[1], -1, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -1, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], -2, ) Mul( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Div( initialState[1], 2, ) Mul( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], -2, ) Div( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === Mul( initialState[1], 2, ) Div( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Root( initialState[1] ) Square( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Acos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], -2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], -2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], 1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], 1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], 2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], 2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Asin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Atan( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Atan( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Cos( initialState[1] ) Acos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], -2, ) Mul( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], 2, ) Mul( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], -2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], 2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Root( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Sin( initialState[1] ) Asin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) SinDivByCos( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Square( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], -1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], -1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], -2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], -2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], 1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], 1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], 2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], 2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sin( initialState[1] ) Tan( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === SinDivByCos( initialState[1] ) Atan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 80; Avg. success rate: 0.9]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Add( initialState[1], 1, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Div( initialState[1], 1, ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Mul( initialState[1], 1, ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Root( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Root( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 1, )  === SinSquared( initialState[1] ) Sub( initialState[1], -1, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Div( input[0], 1, )  === Square( initialState[1] ) Root( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], -1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], -1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], -2, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], -2, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], 1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], 1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], 2, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Sub( initialState[1], 2, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 1, )  === Tan( initialState[1] ) Atan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 80; Avg. success rate: 0.9]
Div( input[0], 2, )  === Div( initialState[1], -1, ) Div( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) Add( initialState[1], input[0], ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], -2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 1, ) Div( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Div( initialState[1], 2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Div( input[0], 2, )  === Mul( initialState[1], -1, ) Div( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Div( input[0], 2, )  === Mul( initialState[1], 1, ) Div( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Add( initialState[1], input[0], ) Div( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], 2, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Div( initialState[1], 2, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], -1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], -1, )  === Div( initialState[1], -1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], -2, ) Mul( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 1, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 1, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Div( initialState[1], 2, ) Mul( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -2, ) Add( initialState[1], input[0], ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], -2, ) Div( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 1, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Mul( initialState[1], 2, ) Div( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], -1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], -1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], -2, ) Mul( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], 1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], 1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Div( initialState[1], 2, ) Mul( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], -1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], -1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], -2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === Sin( initialState[1] ) Mul( initialState[1], 2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Add( initialState[1], 1, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Root( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Root( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], -1, )  === SinSquared( initialState[1] ) Sub( initialState[1], -1, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], -2, )  === Add( initialState[1], input[0], ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Add( initialState[1], input[0], ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Add( initialState[1], input[0], ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Add( initialState[1], input[0], ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], -2, )  === Div( initialState[1], -1, ) Mul( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Div( initialState[1], 1, ) Mul( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -1, ) Mul( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], -2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 1, ) Mul( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 2, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 2, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 2, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], -2, )  === Mul( initialState[1], 2, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], -1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], -1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], -2, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], -2, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], 1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], 1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], 2, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], 2, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Add( initialState[1], input[0], ) Div( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Atan( initialState[1] ) SinDivByCos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Atan( initialState[1] ) Tan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Cos( initialState[1] ) Acos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Cos( initialState[1] ) Asin( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Cos( initialState[1] ) Atan( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 8; Avg. success rate: 0.2]
Mul( input[0], 1, )  === CosDivBySin( initialState[1] ) Acos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 8; Avg. success rate: 0.2]
Mul( input[0], 1, )  === CosDivBySin( initialState[1] ) Asin( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 8; Avg. success rate: 0.2]
Mul( input[0], 1, )  === CosDivBySin( initialState[1] ) Atan( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], -2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Add( initialState[1], input[0], ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 16; Avg. success rate: 0.2]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], -2, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Div( initialState[1], -2, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], 1, )  === CosSquared( initialState[1] ) Sub( initialState[1], 2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], -2, ) Mul( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Div( initialState[1], 2, ) Mul( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], -2, ) Div( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === Mul( initialState[1], 2, ) Div( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Root( initialState[1] ) Square( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Acos( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], -1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], -1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], -2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], -2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], 1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], 1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], 2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Add( initialState[1], 2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Asin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Atan( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Atan( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Cos( initialState[1] ) Acos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], -2, ) Mul( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Div( initialState[1], 2, ) Mul( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], -1, ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], -1, ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], -2, ) Div( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Mul( initialState[1], 2, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Root( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Sin( initialState[1] ) Asin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) SinDivByCos( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Square( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], -1, ) Add( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], -1, ) Sub( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], -2, ) Add( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], -2, ) Sub( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], 1, ) Add( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], 1, ) Sub( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], 2, ) Add( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Sub( initialState[1], 2, ) Sub( initialState[1], -2, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sin( initialState[1] ) Tan( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === SinDivByCos( initialState[1] ) Atan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 80; Avg. success rate: 0.9]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Add( initialState[1], 1, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Div( initialState[1], 1, ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Mul( initialState[1], 1, ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Root( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Root( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Mul( input[0], 1, )  === SinSquared( initialState[1] ) Sub( initialState[1], -1, ) Div( initialState[1], 2, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 2; Avg. success rate: 0.2]
Mul( input[0], 1, )  === Square( initialState[1] ) Root( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], -1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], -1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], -2, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], -2, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], 1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], 1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], 2, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Sub( initialState[1], 2, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 1, )  === Tan( initialState[1] ) Atan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 80; Avg. success rate: 0.9]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Add( initialState[1], input[0], ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 160; Avg. success rate: 0.9]
Mul( input[0], 2, )  === CosDivBySin( initialState[1] ) CosSquared( initialState[1] ) Square( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Mul( input[0], 2, )  === Div( initialState[1], -1, ) Mul( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Div( initialState[1], 1, ) Add( initialState[1], input[0], ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Div( initialState[1], 1, ) Mul( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -1, ) Mul( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) Div( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) Mul( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) Sin( initialState[1] ) Div( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) Sin( initialState[1] ) Mul( initialState[1], -1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], -2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 40; Avg. success rate: 0.9]
Mul( input[0], 2, )  === Mul( initialState[1], 1, ) Add( initialState[1], input[0], ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 1, ) Mul( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Mul( input[0], 2, )  === Mul( initialState[1], 2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 40; Avg. success rate: 0.9]
Root( input[0] )  === Div( initialState[1], 1, ) Root( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Mul( initialState[1], 1, ) Root( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Root( input[0] )  === Root( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Sin( input[0] )  === Div( initialState[1], 1, ) Sin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Div( initialState[1], 1, ) Sin( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === Div( initialState[1], 1, ) Sin( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === Mul( initialState[1], 1, ) Sin( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === Sin( initialState[1] ) CosSquared( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Sin( input[0] )  === Sin( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) Div( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === Sin( initialState[1] ) Div( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === Sin( initialState[1] ) Mul( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === Sin( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) SinDivByCos( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === Sin( initialState[1] ) SinDivByCos( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === Sin( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Sin( input[0] )  === Sin( initialState[1] ) Tan( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === Sin( initialState[1] ) Tan( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 8; Avg. success rate: 0.3]
Sin( input[0] )  === SinSquared( initialState[1] ) CosSquared( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 8; Avg. success rate: 0]
Sin( input[0] )  === SinSquared( initialState[1] ) Root( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
Sin( input[0] )  === SinSquared( initialState[1] ) Root( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 16; Avg. success rate: 0.3]
Sin( input[0] )  === SinSquared( initialState[1] ) Root( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.3 [Total occurred: 16; Avg. success rate: 0.3]
SinDivByCos( input[0] )  === Div( initialState[1], 1, ) SinDivByCos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Div( initialState[1], 1, ) SinDivByCos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Div( initialState[1], 1, ) SinDivByCos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Div( initialState[1], 1, ) Tan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Div( initialState[1], 1, ) Tan( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Div( initialState[1], 1, ) Tan( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Mul( initialState[1], 1, ) SinDivByCos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Mul( initialState[1], 1, ) SinDivByCos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Mul( initialState[1], 1, ) SinDivByCos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Mul( initialState[1], 1, ) Tan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Mul( initialState[1], 1, ) Tan( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Mul( initialState[1], 1, ) Tan( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Div( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Div( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Mul( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Mul( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) SinDivByCos( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) SinDivByCos( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 80; Avg. success rate: 0.9]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Tan( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === SinDivByCos( initialState[1] ) Tan( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Div( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Div( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Mul( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Mul( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) SinDivByCos( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) SinDivByCos( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 80; Avg. success rate: 0.9]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Tan( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinDivByCos( input[0] )  === Tan( initialState[1] ) Tan( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
SinSquared( input[0] )  === Add( initialState[1], -2, ) Atan( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
SinSquared( input[0] )  === Div( initialState[1], -1, ) SinSquared( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === Div( initialState[1], -1, ) SinSquared( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === Div( initialState[1], -1, ) SinSquared( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === Div( initialState[1], 1, ) SinSquared( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === Div( initialState[1], 1, ) SinSquared( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === Div( initialState[1], 1, ) SinSquared( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === Mul( initialState[1], -1, ) SinSquared( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === Mul( initialState[1], -1, ) SinSquared( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === Mul( initialState[1], -1, ) SinSquared( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === Mul( initialState[1], 1, ) SinSquared( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === Mul( initialState[1], 1, ) SinSquared( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === Mul( initialState[1], 1, ) SinSquared( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === Sin( initialState[1] ) SinSquared( initialState[1] ) Asin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
SinSquared( input[0] )  === Sin( initialState[1] ) SinSquared( initialState[1] ) Atan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
SinSquared( input[0] )  === Sin( initialState[1] ) Square( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
SinSquared( input[0] )  === Sin( initialState[1] ) Square( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 40; Avg. success rate: 0.4]
SinSquared( input[0] )  === Sin( initialState[1] ) Square( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 40; Avg. success rate: 0.4]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Div( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Div( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Mul( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Mul( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) SinDivByCos( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === SinSquared( initialState[1] ) SinDivByCos( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === SinSquared( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 80; Avg. success rate: 1]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Tan( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === SinSquared( initialState[1] ) Tan( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.4 [Total occurred: 20; Avg. success rate: 0.4]
SinSquared( input[0] )  === Sub( initialState[1], 2, ) Atan( initialState[1] ) Cos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Square( input[0] )  === Div( initialState[1], -1, ) Square( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Div( initialState[1], 1, ) Square( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Mul( initialState[1], -1, ) Square( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Mul( initialState[1], 1, ) Square( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Square( input[0] )  === Square( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 32; Avg. success rate: 0.2]
Sub( input[0], -1, )  === Add( initialState[1], -1, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], -1, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 2, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], 2, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Add( initialState[1], input[0], ) Atan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 16; Avg. success rate: 0]
Sub( input[0], -1, )  === Div( initialState[1], 1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Div( initialState[1], 1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Mul( initialState[1], 1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Mul( initialState[1], 1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Mul( initialState[1], 2, ) Atan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0 [Total occurred: 4; Avg. success rate: 0]
Sub( input[0], -1, )  === Sin( initialState[1] ) Add( initialState[1], input[0], ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 16; Avg. success rate: 0.2]
Sub( input[0], -1, )  === SinSquared( initialState[1] ) Add( initialState[1], input[0], ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.2 [Total occurred: 16; Avg. success rate: 0.2]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -2, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], -2, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], 1, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -1, )  === Sub( initialState[1], 1, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Add( initialState[1], 2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], -2, )  === Div( initialState[1], 1, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Div( initialState[1], 1, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Mul( initialState[1], 1, ) Add( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Mul( initialState[1], 1, ) Sub( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -1, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -1, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], -2, )  === Sub( initialState[1], -2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -2, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], -2, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], 1, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Add( initialState[1], 1, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Div( initialState[1], 1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Div( initialState[1], 1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Mul( initialState[1], 1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Mul( initialState[1], 1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], -1, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], -1, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 1, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 2, ) Add( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 1, )  === Sub( initialState[1], 2, ) Sub( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Add( initialState[1], -2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Sub( input[0], 2, )  === Div( initialState[1], 1, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Div( initialState[1], 1, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Mul( initialState[1], 1, ) Add( initialState[1], -2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Mul( initialState[1], 1, ) Sub( initialState[1], 2, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 1, ) Add( initialState[1], -1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 1, ) Sub( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 20; Avg. success rate: 1]
Sub( input[0], 2, )  === Sub( initialState[1], 2, ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Div( initialState[1], 1, ) SinDivByCos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Div( initialState[1], 1, ) SinDivByCos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Div( initialState[1], 1, ) SinDivByCos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Div( initialState[1], 1, ) Tan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Div( initialState[1], 1, ) Tan( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Div( initialState[1], 1, ) Tan( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Mul( initialState[1], 1, ) SinDivByCos( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Mul( initialState[1], 1, ) SinDivByCos( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Mul( initialState[1], 1, ) SinDivByCos( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Mul( initialState[1], 1, ) Tan( initialState[1] ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Mul( initialState[1], 1, ) Tan( initialState[1] ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Mul( initialState[1], 1, ) Tan( initialState[1] ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Div( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Div( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Mul( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Mul( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) SinDivByCos( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) SinDivByCos( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 80; Avg. success rate: 0.9]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Tan( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === SinDivByCos( initialState[1] ) Tan( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Tan( initialState[1] ) Div( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Tan( initialState[1] ) Div( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Tan( initialState[1] ) Div( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Tan( initialState[1] ) Mul( initialState[1], 1, ) Sin( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Tan( initialState[1] ) Mul( initialState[1], 1, ) SinDivByCos( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Tan( initialState[1] ) Mul( initialState[1], 1, ) Tan( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Tan( initialState[1] ) Sin( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Tan( initialState[1] ) Sin( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 1 [Total occurred: 40; Avg. success rate: 1]
Tan( input[0] )  === Tan( initialState[1] ) SinDivByCos( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Tan( initialState[1] ) SinDivByCos( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Tan( initialState[1] ) SinSquared( initialState[1] ) Root( initialState[1] )  => initialState[0] == followUpState[1] LastSuccessRate: 0.9 [Total occurred: 80; Avg. success rate: 0.9]
Tan( input[0] )  === Tan( initialState[1] ) Tan( initialState[1] ) Div( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
Tan( input[0] )  === Tan( initialState[1] ) Tan( initialState[1] ) Mul( initialState[1], 1, )  => initialState[0] == followUpState[1] LastSuccessRate: 0.1 [Total occurred: 4; Avg. success rate: 0.1]
